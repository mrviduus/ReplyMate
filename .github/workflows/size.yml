name: Bundle Size Check

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  size-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download models
      run: npm run dl-models
      
    - name: Build extension
      run: npm run build
      
    - name: Check architecture integrity
      run: |
        # Check that sw.js has no DOM references
        if grep -q "document\." dist/sw.js || grep -q "window\." dist/sw.js; then
          echo "‚ùå Service worker contains DOM references!"
          exit 1
        fi
        echo "‚úÖ Service worker is clean (no DOM references)"
        
        # Check that offscreen.js contains ML logic
        if ! grep -q "ORT ready" dist/offscreen.js; then
          echo "‚ùå Offscreen document missing ML logic!"
          exit 1
        fi
        echo "‚úÖ Offscreen document contains ML logic"
      
    - name: Check bundle size
      run: |
        # Calculate total size of built extension
        TOTAL_SIZE=$(du -sb dist/ | cut -f1)
        MAX_SIZE=$((30 * 1024 * 1024))  # 30MB in bytes
        
        echo "Total bundle size: $(($TOTAL_SIZE / 1024 / 1024))MB"
        echo "Maximum allowed: 30MB"
        
        if [ $TOTAL_SIZE -gt $MAX_SIZE ]; then
          echo "‚ùå Bundle size exceeds 30MB limit!"
          echo "Current size: $(($TOTAL_SIZE / 1024 / 1024))MB"
          exit 1
        else
          echo "‚úÖ Bundle size is within limits"
        fi
        
    - name: Check model disk usage
      run: |
        # Check models directory size (should be minimal - just configs)
        if [ -d "assets/models" ]; then
          MODEL_SIZE=$(du -sb assets/models/ | cut -f1)
          MODEL_SIZE_MB=$(($MODEL_SIZE / 1024 / 1024))
          
          echo "Model assets size: ${MODEL_SIZE_MB}MB"
          
          # Model configs should be < 1MB (actual weights downloaded on demand)
          if [ $MODEL_SIZE -gt $((1 * 1024 * 1024)) ]; then
            echo "‚ö†Ô∏è  Model assets larger than expected: ${MODEL_SIZE_MB}MB"
            echo "Model weights should be downloaded on-demand, not bundled"
          else
            echo "‚úÖ Model assets size appropriate: ${MODEL_SIZE_MB}MB"
          fi
        fi
        
    - name: Bundle size summary
      run: |
        echo "## Bundle Size Summary üì¶" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Size | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|------|--------|" >> $GITHUB_STEP_SUMMARY
        
        TOTAL_SIZE=$(du -sb dist/ | cut -f1)
        TOTAL_SIZE_MB=$(($TOTAL_SIZE / 1024 / 1024))
        
        if [ $TOTAL_SIZE -gt $((30 * 1024 * 1024)) ]; then
          STATUS="‚ùå Too large"
        else
          STATUS="‚úÖ OK"
        fi
        
        echo "| Extension Bundle | ${TOTAL_SIZE_MB}MB | $STATUS |" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "assets/models" ]; then
          MODEL_SIZE=$(du -sb assets/models/ | cut -f1)
          MODEL_SIZE_MB=$(($MODEL_SIZE / 1024 / 1024))
          echo "| Model Assets | ${MODEL_SIZE_MB}MB | ‚úÖ Config only |" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Max Size Limit:** 30MB" >> $GITHUB_STEP_SUMMARY
